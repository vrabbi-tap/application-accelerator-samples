#@ load("@ytt:data", "data")
#@ def in_list(key, list):
#@  return hasattr(data.values.tap_values, key) and (data.values.tap_values[key] in list)
#@ end
#@ def in_attr_list(key, list):
#@  return hasattr(data.values, key) and (data.values[key] in list)
#@ end
#@ if in_list('supply_chain', ['testing', 'testing_scanning']) and in_list('profile', ['full', 'iterate', 'build']):
#@ if in_attr_list('language', ['java','maven','gradle']):
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: developer-defined-tekton-pipeline
  labels:
    apps.tanzu.vmware.com/pipeline: test
  annotations:
    kapp.k14s.io/create-strategy: fallback-on-update
spec:
  params:
    - name: source-url
    - name: source-revision
  tasks:
    - name: test
      params:
        - name: source-url
          value: $(params.source-url)
        - name: source-revision
          value: $(params.source-revision)
      taskSpec:
        params:
          - name: source-url
          - name: source-revision
        steps:
          - name: test
            image: gradle
            script: |-
              cd `mktemp -d`
              wget -qO- $(params.source-url) | tar xvz -m
              pwd
              MVNW=mvnw
              GRADLE="build.gradle"
              if [ -f "$MVNW" ]; then
                  chmod +x ./mvnw
                  ./mvnw test
              elif [ -f "$GRADLE" ]; then
                  gradle test --debug
              else
                  echo "WARNING: No tests were run. This workload is not built with one of the currently supported frameworks (maven or gradle). If using another language/framework, update the image and the script sections of the 'pipeline.tekton.dev/developer-defined-tekton-pipeline' resource in your namespace to match your language/framework."
                  #exit 1
              fi
#@ end
#@ end
