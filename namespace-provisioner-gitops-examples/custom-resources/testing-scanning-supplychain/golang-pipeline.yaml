#@ load("@ytt:data", "data")
#@ def in_list(key, list):
#@  return hasattr(data.values.tap_values, key) and (data.values.tap_values[key] in list)
#@ end
#@ def in_attr_list(key, list):
#@  return hasattr(data.values.tap_values, key) and (data.values.tap_values[key] in list)
#@ end
#@ if/end in_list('supply_chain', ['testing', 'testing_scanning']) and in_list('profile', ['full', 'iterate', 'build']):
#@ if in_attr_list('language', ['golang','go']):
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: developer-defined-tekton-pipeline-java
  labels:
    apps.tanzu.vmware.com/pipeline: test
  annotations:
    kapp.k14s.io/create-strategy: fallback-on-update
spec:
  params:
    - name: source-url
    - name: source-revision
  tasks:
    - name: test
      params:
        - name: source-url
          value: $(params.source-url)
        - name: source-revision
          value: $(params.source-revision)
      taskSpec:
        params:
          - name: source-url
          - name: source-revision
        steps:
          - name: test
            image: docker.io/golang:latest@sha256:8ea012ba16112273afc171ff75ce517fe4edeb3849f6714554aa4e71fe54e4c1
            script: |-
              #!/usr/bin/env bash
              cd `mktemp -d`
              wget -qO- $(params.source-url) | tar xvz -m
              pwd
              echo ">>> Unit-Tests"
              go test ./...
              if [[ $? -ne 0 ]] 
              then
                echo -e "\n\n[RESULT] ----------------------------------------------------------------------"
                echo -n "Failed Unit-Tests: "
                exit 1
              else
                echo -e "\n\n[RESULT] ----------------------------------------------------------------------"
                echo -n "Passed all Unit-Tests: "
                exit 0
              fi
              exit 2
#@ end
#@ end
